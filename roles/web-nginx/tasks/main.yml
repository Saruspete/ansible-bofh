---

#
# Configure system
#

- block:
    - name: Package - Install EPEL
      package: name=epel-release state=present
    - name: Package - Install selinux-python
      package: name=libselinux-python state=present
  when: ansible_os_family == "RedHat"
  tags: ['package']

# Install packages
- name: Package - Install nginx
  package: name=nginx state=present
  tags: ['package']

# Fix user
#- name: Accounts - nginx
#  user: nginx


#
# Configure nginx
#

- name: Config - nginx.conf
  template: src={{ item }} dest=/etc/nginx/nginx.conf
  with_first_found:
    - files:
      - nginx.conf.{{ inventory_hostname }}.j2
      - nginx.conf.j2
    - paths:
      - ../templates
  notify: restart nginx
  tags: ['config']


#
# Crypto related
#
- name: Crypto - DH Param - Generate
  # https://security.stackexchange.com/questions/95178/diffie-hellman-parameters-still-calculating-after-24-hours
  command: openssl dhparam -dsaparam -out /etc/nginx/dhparam.pem 4096 creates=/etc/nginx/dhparam.pem
  tags: ['config','crypto']

- name: Crypto - DH Param - Fix perms
  file:
    path: /etc/nginx/dhparam.pem
    owner: "{{ http_data_user }}"
    group: "{{ http_data_group }}"
  tags: ['config','crypto']


#
# Folder structure
#

- name: Folders - Create base folders
  file: 
    path: "{{ http_data_dir }}"
    state: directory
    mode: 0750
    owner: "{{ http_data_user }}"
    group: "{{ http_data_group }}"

#- name: Folders - Create default virtalhost
#  file: path={{ http_data_dir }}/default state=directory
#  tags: ['folders']

- name: Folders - Find all virtualhosts
  find:
    paths: "{{ http_data_dir }}"
    file_type: directory
  register: vhosts
  tags: ['always']

# Create virtualhost structure
- name: Folders - Create hierarchy of virtualhost
  file:
    path: "{{ item.0.path }}/{{ item.1 }}"
    state: directory
    mode: 0750
    owner: "{{ http_data_user }}"
    group: "{{ http_data_group }}"
    unsafe_writes: yes
  with_nested:
    - "{{ vhosts.files }}"
    - [ 'bin', 
        'conf', 'conf/nginx',
        'cron', 
        'html', 'html/public', 
        'logs', 'logs/nginx',
        'priv',
        'temp', 'temp/temp', 'temp/nginx', 'temp/upload', 'temp/session' ]
  tags: ['folders']


#
# Setup base config
#
- name: Config - Generate domain-config
  include: genconfig.yml

# And execute handlers if needed
- name: Ansible - Execute handlers to restart nginx now if needed
  meta: flush_handlers

#
# Manage https certificates
#

# Use letsencrypt free certs
- name: Crypto - Request Certificate
  include_role: name=pki-letsencrypt
  vars:
    letsencrypt_webroot_path: "{{ domain.path }}/html/public"
    letsencrypt_cert_domains: 
      - "{{ domain.path | webfolder2domain }}"
  with_items:
    "{{ vhosts.files }}"
  when: domain != "default"
  loop_control:
    loop_var: domain
  tags: ['crypto']

- name: Crypto - List letsencrypt certificates
  find:
    paths: "{{ certbot_live_dir }}"
    file_type: directory
  register: letsencrypt_domains
  tags: ['crypto']

- name: Crypto - Create links to priv folder
  file:
    state: link
    src: "{{ item.0.path }}/{{ item.1 }}"
    path: "{{ http_data_dir }}/{{ item.0.path | webfolder2domain }}/priv/{{ item.1 }}"
  with_nested:
    - "{{ letsencrypt_domains.files }}"
    - [ 'cert.pem', 'chain.pem', 'fullchain.pem', 'privkey.pem' ]
  tags: ['crypto']

#
# Re-deploy configuration if new certs
#

- name: Config - Generate domain-config
  include: genconfig.yml


#
# Services
#

- name: start the nginx service
  service: name=nginx state=started enabled=yes

